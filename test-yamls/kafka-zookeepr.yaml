---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  labels:
    io.soda.service: zookeeper
    app: dummy
  name: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      io.soda.service: zookeeper
  strategy: {}
  template:
    metadata:
      labels:
        io.soda.service: zookeeper
        app: dummy
    spec:  
      containers:
        - image: wurstmeister/zookeeper
          name: zookeeper
          ports:
            - containerPort: 2181
          resources: {}
      restartPolicy: Always	  
---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  creationTimestamp: null
  labels:
    io.soda.service: zookeeper
  name: zookeeper
spec:
  ports:
    - name: "2181"
      port: 2181
      targetPort: 2181
  selector:
    io.soda.service: zookeeper
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  labels:
    io.soda.service: kafka
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      io.soda.service: kafka
  strategy: {}
  template:
    metadata:
      labels:
        io.soda.service: kafka
    spec:  
      containers:
        - env:
            - name: KAFKA_PORT
              value: "9092"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: PLAINTEXT://kafka:9092
            - name: KAFKA_LISTENERS
              value: PLAINTEXT://:9092
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper:2181
          image: wurstmeister/kafka:2.11-2.0.1
          name: kafka
          ports:
            - containerPort: 9092
          resources: {}
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  labels:
    io.soda.service: kafka
  name: kafka
spec:
  ports:
    - name: "9092"
      port: 9092
      targetPort: 9092
  selector:
    io.soda.service: kafka
status:
  loadBalancer: {}


